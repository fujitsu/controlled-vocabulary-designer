"""
reference_vocabulary.py COPYRIGHT FUJITSU LIMITED 2021
"""
# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ReferenceVocabulary(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: int=None, term: str=None, preferred_label: str=None, uri: str=None, broader_uri: str=None):  # noqa: E501
        """ReferenceVocabulary - a model defined in Swagger

        :param id: The id of this ReferenceVocabulary.  # noqa: E501
        :type id: int
        :param term: The term of this ReferenceVocabulary.  # noqa: E501
        :type term: str
        :param preferred_label: The preferred_label of this ReferenceVocabulary.  # noqa: E501
        :type preferred_label: str
        :param uri: The uri of this ReferenceVocabulary.  # noqa: E501
        :type uri: str
        :param broader_uri: The broader_uri of this ReferenceVocabulary.  # noqa: E501
        :type broader_uri: str
        """
        self.swagger_types = {
            'id': int,
            'term': str,
            'preferred_label': str,
            'uri': str,
            'broader_uri': str
        }

        self.attribute_map = {
            'id': 'id',
            'term': 'term',
            'preferred_label': 'preferred_label',
            'uri': 'uri',
            'broader_uri': 'broader_uri'
        }
        self._id = id
        self._term = term
        self._preferred_label = preferred_label
        self._uri = uri
        self._broader_uri = broader_uri

    @classmethod
    def from_dict(cls, dikt) -> 'ReferenceVocabulary':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ReferenceVocabulary of this ReferenceVocabulary.  # noqa: E501
        :rtype: ReferenceVocabulary
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this ReferenceVocabulary.


        :return: The id of this ReferenceVocabulary.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this ReferenceVocabulary.


        :param id: The id of this ReferenceVocabulary.
        :type id: int
        """

        self._id = id

    @property
    def term(self) -> str:
        """Gets the term of this ReferenceVocabulary.


        :return: The term of this ReferenceVocabulary.
        :rtype: str
        """
        return self._term

    @term.setter
    def term(self, term: str):
        """Sets the term of this ReferenceVocabulary.


        :param term: The term of this ReferenceVocabulary.
        :type term: str
        """

        self._term = term

    @property
    def preferred_label(self) -> str:
        """Gets the preferred_label of this ReferenceVocabulary.


        :return: The preferred_label of this ReferenceVocabulary.
        :rtype: str
        """
        return self._preferred_label

    @preferred_label.setter
    def preferred_label(self, preferred_label: str):
        """Sets the preferred_label of this ReferenceVocabulary.


        :param preferred_label: The preferred_label of this ReferenceVocabulary.
        :type preferred_label: str
        """

        self._preferred_label = preferred_label

    @property
    def uri(self) -> str:
        """Gets the uri of this ReferenceVocabulary.


        :return: The uri of this ReferenceVocabulary.
        :rtype: str
        """
        return self._uri

    @uri.setter
    def uri(self, uri: str):
        """Sets the uri of this ReferenceVocabulary.


        :param uri: The uri of this ReferenceVocabulary.
        :type uri: str
        """

        self._uri = uri

    @property
    def broader_uri(self) -> str:
        """Gets the broader_uri of this ReferenceVocabulary.


        :return: The broader_uri of this ReferenceVocabulary.
        :rtype: str
        """
        return self._broader_uri

    @broader_uri.setter
    def broader_uri(self, broader_uri: str):
        """Sets the broader_uri of this ReferenceVocabulary.


        :param broader_uri: The broader_uri of this ReferenceVocabulary.
        :type broader_uri: str
        """

        self._broader_uri = broader_uri
