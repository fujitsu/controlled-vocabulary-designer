"""
upload.py COPYRIGHT FUJITSU LIMITED 2021
"""
# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Upload(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, editing_vocabulary: str=None, editing_vocabulary_meta: str=None, reference_vocabulary1: str=None, reference_vocabulary2: str=None, reference_vocabulary3: str=None):  # noqa: E501
        """Upload - a model defined in Swagger

        :param editing_vocabulary: The editing_vocabulary of this Upload.  # noqa: E501
        :type editing_vocabulary: str
        :param editing_vocabulary_meta: The editing_vocabulary_meta of this Upload.  # noqa: E501
        :type editing_vocabulary_meta: str
        :param reference_vocabulary1: The reference_vocabulary1 of this Upload.  # noqa: E501
        :type reference_vocabulary1: str
        :param reference_vocabulary2: The reference_vocabulary2 of this Upload.  # noqa: E501
        :type reference_vocabulary2: str
        :param reference_vocabulary3: The reference_vocabulary3 of this Upload.  # noqa: E501
        :type reference_vocabulary3: str
        """
        self.swagger_types = {
            'editing_vocabulary': str,
            'editing_vocabulary_meta': str,
            'reference_vocabulary1': str,
            'reference_vocabulary2': str,
            'reference_vocabulary3': str,
        }

        self.attribute_map = {
            'editing_vocabulary': 'editing_vocabulary',
            'editing_vocabulary_meta': 'editing_vocabulary_meta',
            'reference_vocabulary1': 'reference_vocabulary1',
            'reference_vocabulary2': 'reference_vocabulary2',
            'reference_vocabulary3': 'reference_vocabulary3',
        }
        self._editing_vocabulary = editing_vocabulary
        self._editing_vocabulary_meta = editing_vocabulary_meta
        self._reference_vocabulary1 = reference_vocabulary1
        self._reference_vocabulary2 = reference_vocabulary2
        self._reference_vocabulary3 = reference_vocabulary3

    @classmethod
    def from_dict(cls, dikt) -> 'Upload':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Upload of this Upload.  # noqa: E501
        :rtype: Upload
        """
        return util.deserialize_model(dikt, cls)

    @property
    def editing_vocabulary(self) -> str:
        """Gets the editing_vocabulary of this Upload.

        editing_vocabulary is xlsx file  # noqa: E501

        :return: The editing_vocabulary of this Upload.
        :rtype: str
        """
        return self._editing_vocabulary

    @editing_vocabulary.setter
    def editing_vocabulary(self, editing_vocabulary: str):
        """Sets the editing_vocabulary of this Upload.

        editing_vocabulary is xlsx file  # noqa: E501

        :param editing_vocabulary: The editing_vocabulary of this Upload.
        :type editing_vocabulary: str
        """

        self._editing_vocabulary = editing_vocabulary
    
    @property
    def editing_vocabulary_meta(self) -> str:
        """Gets the editing_vocabulary_meta of this Upload.

        editing_vocabulary_meta is xlsx file  # noqa: E501

        :return: The editing_vocabulary_meta of this Upload.
        :rtype: str
        """
        return self._editing_vocabulary_meta

    @editing_vocabulary_meta.setter
    def editing_vocabulary_meta(self, editing_vocabulary_meta: str):
        """Sets the editing_vocabulary_meta of this Upload.

        editing_vocabulary_meta is xlsx file  # noqa: E501

        :param editing_vocabulary_meta: The editing_vocabulary_meta of this Upload.
        :type editing_vocabulary_meta: str
        """

        self._editing_vocabulary_meta = editing_vocabulary_meta

    @property
    def reference_vocabulary1(self) -> str:
        """Gets the reference_vocabulary1 of this Upload.

        reference_vocabulary1 is xlsx file  # noqa: E501

        :return: The reference_vocabulary1 of this Upload.
        :rtype: str
        """
        return self._reference_vocabulary1

    @reference_vocabulary1.setter
    def reference_vocabulary1(self, reference_vocabulary1: str):
        """Sets the reference_vocabulary1 of this Upload.

        reference_vocabulary1 is xlsx file  # noqa: E501

        :param reference_vocabulary1: The reference_vocabulary1 of this Upload.
        :type reference_vocabulary1: str
        """

        self._reference_vocabulary1 = reference_vocabulary1

    @property
    def reference_vocabulary2(self) -> str:
        """Gets the reference_vocabulary2 of this Upload.

        reference_vocabulary2 is xlsx file  # noqa: E501

        :return: The reference_vocabulary2 of this Upload.
        :rtype: str
        """
        return self._reference_vocabulary2

    @reference_vocabulary2.setter
    def reference_vocabulary2(self, reference_vocabulary2: str):
        """Sets the reference_vocabulary2 of this Upload.

        reference_vocabulary2 is xlsx file  # noqa: E501

        :param reference_vocabulary2: The reference_vocabulary2 of this Upload.
        :type reference_vocabulary2: str
        """

        self._reference_vocabulary2 = reference_vocabulary2

    @property
    def reference_vocabulary3(self) -> str:
        """Gets the reference_vocabulary3 of this Upload.

        reference_vocabulary3 is xlsx file  # noqa: E501

        :return: The reference_vocabulary3 of this Upload.
        :rtype: str
        """
        return self._reference_vocabulary3

    @reference_vocabulary3.setter
    def reference_vocabulary3(self, reference_vocabulary3: str):
        """Sets the reference_vocabulary3 of this Upload.

        reference_vocabulary3 is xlsx file  # noqa: E501

        :param reference_vocabulary3: The reference_vocabulary3 of this Upload.
        :type reference_vocabulary3: str
        """

        self._reference_vocabulary3 = reference_vocabulary3

